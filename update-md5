#!/bin/bash

if [ $# -ne 0 ] ; then
    dir=$1
    if [ ! -d "$dir" ] ; then
        echo "\"$dir\" is not a directory, aborting."
        exit
    fi
else
    dir='.'
fi

echo "Registering new books in \"$dir\"..."
find $dir -type f \
      -not -name 000-browse.php -not -name md5sums.txt -not -name update-md5 \
      -not -name .htaccess -not -name header.html -not -name exclude.txt -not -name .updateme \
      -not -path './urantia-library/*' -not -path '*/*.html' -not -path './Recommended-Books/*' \
      -not -path './Science/Programming/Python/Html-Docs/*' -not -path './Incoming/*' \
      -not -path './.authors/*' -not -path '*/*.sdr/*' -not -path './Subjects/*' \
      -not -path './Websites/*' -not -path '*/.covers*' \
      -not -exec fgrep -q {} md5sums.txt \;  -exec md5sum {} + | tee -a md5sums.txt

echo "Checking for duplicates..."
dups=$(awk -F' ' '{print $1}' md5sums.txt |sort|uniq -d)
for dup in $dups
do
   grep $dup md5sums.txt
done

echo "Rebuilding tree-index.html..."
tree -D --dirsfirst -h --du -F -C -T "URANTIA LIBRARY (Indexed on $(date))" -I "b|Archived-Books|Kiwix|Movies|Software|Recommended-Books|Subjects|header.html|Websites|tree-index.html|Html-Docs|update-md5|exclude.txt|urantia-library|000-browse.php" --charset utf-8 -H . -o tree-index.html
